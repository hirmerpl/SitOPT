swagger: "2.0"
info:
  version: "1.0.0"
  title: SitOPT API Reference
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

paths:

  /situations/occured:
    x-swagger-router-controller: situations
    put:
      tags:
        - situation
      summary: Change "occured"-attribute
      description: Change the "occured"-attribute of either specified or all situations. For testing purpose only!
      operationId: situationOccured
      
      parameters:
        - in: query
          name: ID
          description: ID of situation. If left empty, all situations change their "occured"-attribute.
          required: false
          type: string
       

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"


  /situations/byName:
    x-swagger-router-controller: situations
    get:
      tags:
        - situation
      summary: Get situation by name
      description: Returns an array of situations with the specified name. Multiple results possible
      operationId: situationByName
      
      parameters:
        - in: query
          name: name
          description: Name of situation
          required: true
          type: string
       

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"

  /situations/ByThingAndTemplate:
    x-swagger-router-controller: situations
    get:
      tags:
        - situation
      summary: Get situation by thing and situation template
      description: A situation is uniquely identifiable by the thing it belongs to and the situation template it derives from. Returns a document.
      operationId: situationByThingAndTemplate
      
      parameters:
        - name: thing
          in: query
          description: ID of thing
          required: true
          type: string
        - in: query
          name: situationtemplate
          description: ID of situation template
          required: true
          type: string

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  

  /situations/byID:
    x-swagger-router-controller: situations
    get:
      tags:
        - situation
      summary: Get situation by ID
      description: Get specified situations
      operationId: situationByID
      
      parameters:
        - name: ID
          in: query
          description: ID of situation
          required: true
          type: string

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    delete:
      tags:
        - situation
      summary: Delete situation by ID
      description: Deletes specified situation 
      operationId: deleteSituationByID
      
      parameters:
        - name: ID
          in: query
          description: ID of situation
          required: true
          type: string

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
            
      
  /situations/changes:
    x-swagger-router-controller: situations
    post:
      tags:
        - situation
      summary: Registrate for changes
      description: Get a notification when the situation - specified by corresponding thing & situationtemplate - changes via a callback to a specified URL. The parameter "continuous" controls whether the callback only happens once when the situation changes or continues forever. Either enter both IDs or none. 
      operationId: situationChange
      
      parameters:
        - name: SitTempID
          in: query
          description: ID of situation template. If empty, any situation change will be sent to the callback URL
          required: false
          type: string
          
        - name: ThingID
          in: query
          description: ID of thing. If empty, any situation change will be sent to the callback URL
          required: false
          type: string
          
        - name: CallbackURL
          in: query
          description: URL the callback is sent to
          required: true
          type: string
          
        - name: once
          in: query
          description: whether the callback continues or only once
          required: true
          type: boolean
          default: false

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Response"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    
    delete:        
      tags:
        - situation
      summary: Deletes registration
      description: Deletes the registration for either specified or all situation changes.
      
      operationId: situationChangeDelete
      
      parameters:
        - name: ID
          in: query
          description: ID of situation. If empty, callbacks to the specified URL will be stopped.
          required: false
          type: string
          
        - name: CallbackURL
          in: query
          description: URL to which the callback shall be stopped
          required: true
          type: string


      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Response"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
    
      
      
      
  /situations:
  # binds a127 app logic to a route
    x-swagger-router-controller: situations
    get:
      tags:
        - situation
      summary: Get all situations
      description: Get all situations
      operationId: allSituations
      
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Response"
        # responses may fall through to errors
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
      
    post:
      tags:
        - situation
      summary: Store situation
      description: Stores situation in database. ID of thing, situation template and sensors referenced in the situation must be in the database.
      operationId: saveSituation
      # used as the method name of the controller
      parameters:
        - in: body
          name: body
          description: input
          required: false
          schema:
            $ref: "#/definitions/SituationModel"
            
     
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Response"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /things/ByName:
    x-swagger-router-controller: things
    get:
      tags:
        - thing
      summary: Get thing by name
      description: Returns array of things with specified name. Multiple things may have the same name.
      operationId: getThingByName
      
      parameters:
        - name: name
          in: query
          description: name of thing
          required: true
          type: string

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
  
            
  /things/ByID:
    x-swagger-router-controller: things
    get:
      tags:
        - thing
      summary: Get thing by ID
      description: Get thing by specified ID
      operationId: getThingByID
      
      parameters:
        - name: ID
          in: query
          description: ID of thing
          required: true
          type: string

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    delete:
      tags:
        - thing
      summary: Delete thing by ID
      description: Deletes thing by specified ID
      operationId: deleteThingByID
      
      parameters:
        - name: ID
          in: query
          description: ID of thing
          required: true
          type: string

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  
  
  /things:
  # binds a127 app logic to a route
    x-swagger-router-controller: things
    
    get:
      tags:
        - thing
      summary: Get all things
      description: Get all things
      operationId: allThings
      
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
    post:
      tags:
        - thing
      summary: Save thing
      description: Save things in the database
      operationId: saveThing
      # used as the method name of the controller
      parameters:
        - in: body
          name: body
          description: input
          required: false
          schema:
            $ref: "#/definitions/ThingModel"
            
     
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Response"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    
    
  /sensorvalues/byID:
  # binds a127 app logic to a route
    x-swagger-router-controller: sensorvalues
  
    get:
      tags:
        - sensor value
      summary: Get all sensorvalues
      description: Returns an array of all sensorvalues
      operationId: sensorvalueByID
      parameters:
        - name: ID
          in: query
          description: ID of thing
          required: true
          type: string
      
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
    delete:
      tags:
        - sensor value
      summary: Delete specific sensorvalues
      description: Deletes specified sensorvalue
      operationId: deleteSensorvalueByID
      parameters:
        - name: ID
          in: query
          description: ID of sensorvalue
          required: true
          type: string
      
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
                
                      
  /sensorvalues:
  # binds a127 app logic to a route
    x-swagger-router-controller: sensorvalues
    
    
    
    get:
      tags:
        - sensor value
      summary: Get all sensorvalues
      description: Returns an array of all sensorvalues
      operationId: allSensorvalues
      
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
    
    
    post:
      tags:
        - sensor value
      summary: Store sensorvalue
      description: Stores sensorvalues in database. Not needed. Used sensorvalues will be stored when saving the corresponding situation.
      operationId: saveSensorvalue
      # used as the method name of the controller
      parameters:
        - in: body
          name: body
          description: input
          required: false
          schema:
            $ref: "#/definitions/SensorvalueModel"
          
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Response"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
          
  
  /situationtemplates/ByName:
    x-swagger-router-controller: situationtemplate
    get:
      tags:
        - situation template
      summary: Get situation template by name
      description: Returns array of situation templates with specified name. Multiple situation templates may have the same name.
      operationId: getTemplateByName
      
      parameters:
        - name: name
          in: query
          description: name of situation template
          required: true
          type: string

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  
            
  /situationtemplates/ByID:
    x-swagger-router-controller: situationtemplate
    get:
      tags:
        - situation template
      summary: Get situation template  by ID
      description: Get thing by specified ID
      operationId: getTemplateByID
      
      parameters:
        - name: ID
          in: query
          description: ID of thing
          required: true
          type: string

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    delete:
      tags:
        - situation template
      summary: Delete situation template by ID
      description: Deletes specified situation template
      operationId: deleteTemplateByID
      
      parameters:
        - name: ID
          in: query
          description: ID of situation template
          required: true
          type: string

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  
  
  
  
  /situationtemplates/{ID}/{templatename}:
    x-swagger-router-controller: situationtemplate
    post:
      tags:
        - situation template
      summary: Stores situationtemplates
      description: Upload the .xml-file to the corresponding situation template
      operationId: uploadAttachment
      # used as the method name of the controller
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "ID"
        in: "path"
        description: "ID of situation template"
        required: true
        type: "string"
     
      - name: "templatename"
        in: "path"
        description: "Name of .xml-file"
        required: true
        type: "string"

      - in: "formData"
        description: "Additional data to pass to server"
        required: false
        type: "string"
        name: "file"
        in: "formData"
        description: "file to upload"
        required: true
        type: "file"
        
          
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Response"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    get:
      tags:
        - situation template
      summary: Returns situationtemplate - not fully implemented
      description: Returns the attached situation template - data of .xml-file
      operationId: getAttachment
      # used as the method name of the controller

      parameters:
      - name: "ID"
        in: "path"
        description: "ID of situation template"
        required: true
        type: "string"
     
      - name: "templatename"
        in: "path"
        description: "Name of .xml-file"
        required: true
        type: "string"

        
          
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Response"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
 
  
  
  /situationtemplates:
  # binds a127 app logic to a route
    x-swagger-router-controller: situationtemplate
    
    get:
      tags:
        - situation template
      summary: Get all situation templates
      description: Returns an array of all situation templates
      operationId: allTemplates
      
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    post:
      tags:
        - situation template
      summary: Stores situationtemplates
      description: Situation templates define situations and the prerequisites for its occurence. One situation template defines one situation
      operationId: saveTemplate
      # used as the method name of the controller
      parameters:
        - in: body
          name: body
          description: input
          required: false
          schema:
            $ref: "#/definitions/SituationtemplateModel"
          
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Response"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
          
  
  
  /sensors/ByName:
    x-swagger-router-controller: sensors
    get:
      tags:
        - sensor
      summary: Get sensors by name
      description: Returns array of sensors with specified name. Multiple sensors may have the same name.
      operationId: getSensorByName
      
      parameters:
        - name: name
          in: query
          description: name of sensor
          required: true
          type: string

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
  
            
  /sensors/ByID:
    x-swagger-router-controller: sensors
    get:
      tags:
        - sensor
      summary: Get sensor by ID
      description: Get sensor by specified ID
      operationId: getSensorByID
      
      parameters:
        - name: ID
          in: query
          description: ID of sensor
          required: true
          type: string

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
  
    delete:
      tags:
        - sensor
      summary: Delete sensor by ID
      description: Deletes specified sensor
      operationId: deleteSensorByID
      
      parameters:
        - name: ID
          in: query
          description: ID of sensor
          required: true
          type: string

      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  
  /sensors:
  # binds a127 app logic to a route
    x-swagger-router-controller: sensors
    
    get:
      tags:
        - sensor
          
      summary: Get all sensors
      description: Returns an array of all sensors
      operationId: allSensors
      
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetModel"
        # responses may fall through to errors
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    
    post:
      tags:
        - sensor
      summary: Stores sensors
      description: Sensors produce sensor values. They each have a sensor quality. ID optional.
      operationId: saveSensor
      # used as the method name of the controller
      parameters:
        - in: body
          name: body
          description: input
          required: false
          schema:
            $ref: "#/definitions/SensorModel"
          
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Response"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
          
  
  

# complex objects have schema definitions
definitions:

  SituationModel:
    required:
      - thing
      - timestamp
      - situationtemplate
      - occured
      - sensorvalues
    properties:
      thing:
        type: string
      timestamp:
        type: string
      situationtemplate:
        type: string
      occured:
        type: boolean
      sensorvalues:
        type: array
        items:
          $ref: "#/definitions/SensorvalueModel"
  

        
  GetModel:
    required:
      - _id
    properties:
      _id:
        type: string

         
         
            
  ThingModel:
    required:
      - name
      - url
      - coordinates
      - description
      - sensor
    properties:
      id:
        type: string
      name:
        type: string
      url:
        type: string
      coordinates:
        type: string
      description:
        type: string
      sensor:
        type: string
        
       
  SensorModel:
    required:
      - name
      - url
      - quality
      - description
    properties:
      id:
        type: string
      name:
        type: string
      url:
        type: string
      quality:
        type: number
        format: float
      description:
        type: string
             
 
        
  SituationtemplateModel:
    required:
      - name
      - situation
      - description
    properties:
      id:
        type: string
      name:
        type: string
      situation:
        type: string
      description:
        type: string
      
    
  SensorvalueModel:
    required:
      - sensor
      - value
      - timestamp
      - quality
    properties:
      sensor:
        type: string 
      value:
        type: number
        format: float
      timestamp:
        type: string
      quality:
        type: number
        format: float
        
        
  Response:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
